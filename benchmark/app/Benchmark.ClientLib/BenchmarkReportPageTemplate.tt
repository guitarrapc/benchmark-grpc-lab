<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Benchmark.ClientLib" #>

<#
    var client = Report.Client;
    var summary = Report.Summary;
    var unaryClientResult = Report.UnaryClientResult;
    var unaryRequestResult = Report.UnaryRequestResult;
    var hubRequestResult = Report.HubRequestResult;

    var lineColor = GetLineColor();
    var barColor = GetColor();
#>

<!-- auto-generated -->
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <title>MagicOnion Benchmark</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous"/>
    <!-- MDB -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.0.0/mdb.min.css"/>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.js"></script>
</head>

<body>
    <header>
        <nav class="navbar navbar-dark bg-dark box-shadow">
            <div class="container d-flex">
                <a class="navbar-brand" href="#">MagicOnion Benchmark</a>
                <div class="collapse navbar-collapse" id="navbarText">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    </ul>
                </div>
                <span class="navbar-text"><#= client.Framework #> v<#= client.Version #></span>
            </div>
        </nav>
    </header>

    <main>
        <div class="bg-light">
            <div class="container" style="padding-top: 3rem;">

                <h1 class="text-muted">Test Result</h1>
                <p class="text-muted">ReportId: <#= summary.ReportId #></p>

                <div class="table-responsive">
                    <h2 class="text-muted">Client</h2>
                    <table class="table table-striped table-sm">
                        <thead>
                            <tr>
                            <th scope="col">OS</th>
                            <th scope="col"># Process</th>
                            <th scope="col">Memory</th>
                            </tr>
                        </thead>
                        <tr>
                            <td><#= client.Os #> (<#= client.Architecture #>)</td>
                            <td><#= client.Processors #></td>
                            <td><#= client.Memory #>GiB</td>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div class="table-responsive">
                    <h2 class="text-muted">Summary</h2>
                    <table class="table table-striped table-sm">
                        <thead>
                            <th scope="col"># Clients</th>
                            <th scope="col"># Requests Ttl</th>
                            <th scope="col">Begin</th>
                            <th scope="col">End</th>
                            <th scope="col">Rps</th>
                            <th scope="col">Duration Ttl</th>
                            <th scope="col">Avg</th>
                            <th scope="col">Min</th>
                            <th scope="col">Max</th>
                        </thead>
                        <tr>
                            <td><#= summary.Clients #></td>
                            <td><#= summary.RequestTotal #></td>
                            <td><#= summary.Begin #></td>
                            <td><#= summary.End #></td>
                            <td><#= string.Format("{0:f2}", summary.Rps) #> rps</td>
                            <td><#= string.Format("{0:f2}", summary.DurationTotal.TotalSeconds) #> sec</td>
                            <td><#= string.Format("{0:f3}", summary.DurationAvg.TotalSeconds) #> sec</td>
                            <td><#= string.Format("{0:f3}", summary.DurationMin.TotalSeconds) #> sec</td>
                            <td><#= string.Format("{0:f3}", summary.DurationMax.TotalSeconds) #> sec</td>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div class="table-responsive">
                    <h2 class="text-muted">Unary Summary</h2>
                    <table class="table table-striped table-sm">
                        <thead>
                            <th scope="col">Requests</th>
                        <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                            <th scope="col"><#= item.RequestCount #> req</th>
                        <# } #>
                            <th scope="col">Errors</th>
                        </thead>
                        <tr>
                            <td>Duration</td>
                        <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                            <td><#= string.Format("{0:f3}", item.Duration.TotalSeconds) #> sec</td>
                        <# } #>
                            <td><#= unaryRequestResult.Errors #></td>
                        </tr>
                        <tr>
                            <td>Rps</td>
                        <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                            <td><#= string.Format("{0:f2}", item.Rps) #> rps</td>
                        <# } #>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div class="table-responsive">
                    <h2 class="text-muted">Hub Summary</h2>
                    <table class="table table-striped table-sm">
                        <thead>
                            <th scope="col">Requests</th>
                        <# foreach(var item in hubRequestResult.SummaryItems) { #>
                            <th scope="col"><#= item.RequestCount #> req</th>
                        <# } #>
                            <th scope="col">Errors</th>
                        </thead>
                        <tr>
                            <td>Duration</td>
                        <# foreach(var item in hubRequestResult.SummaryItems) { #>
                            <td><#= string.Format("{0:f3}", item.Duration.TotalSeconds) #> sec</td>
                        <# } #>
                            <td><#= hubRequestResult.Errors #></td>
                        </tr>
                        <tr>
                            <td>Rps</td>
                        <# foreach(var item in hubRequestResult.SummaryItems) { #>
                            <td><#= string.Format("{0:f2}", item.Rps) #> rps</td>
                        <# } #>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div>
                    <h2>Unary Connection Bench</h2>
                    <canvas id="unaryClientAvg"></canvas>
                    <canvas id="unaryRequestAvg"></canvas>
                    <canvas id="unaryRequestStackBar"></canvas>

                    <script>
                        var ctx = document.getElementById("unaryClientAvg");
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [
                                <# foreach(var item in unaryClientResult.SummaryItems) { #>
                                    "<#= item.RequestCount #>",
                                <# } #>
                                ],
                                datasets: [
                                {
                                    type: 'bar',
                                    label: "Duration",
                                    backgroundColor: "<#= barColor #>",
                                    borderColor: "<#= barColor #>",
                                    data: [
                                    <# foreach(var item in unaryClientResult.SummaryItems) { #>
                                        <#= item.Duration.TotalSeconds #>,
                                    <# } #>
                                    ]
                                },
                                {
                                    type: 'line',
                                    label: "Rps",
                                    pointBackgroundColor: "<#= lineColor #>",
                                    backgroundColor: "<#= lineColor #>",
                                    borderColor: "<#= lineColor #>",
                                    fill: false,
                                    data: [
                                    <# foreach(var item in unaryClientResult.SummaryItems) { #>
                                        <#= item.Rps #>,
                                    <# } #>
                                    ]
                                },
                                ]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Client Average Duration & Rps (Unary)',
                                    padding: 3
                                },
                                legend: {
                                    labels: {
                                        boxWidth: 30,
                                        padding: 20
                                    },
                                    display: true
                                },
                                tooltips: {
                                    mode: 'label' // data colum for tooltip
                                },
                                responsive: true
                            }
                        });
                    </script>

                    <script>
                        var ctx = document.getElementById("unaryRequestAvg");
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [
                                <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                                    "<#= item.RequestCount #>",
                                <# } #>
                                ],
                                datasets: [
                                {
                                    type: 'bar',
                                    label: "Duration",
                                    backgroundColor: "<#= barColor #>",
                                    borderColor: "<#= barColor #>",
                                    data: [
                                    <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                                        <#= item.Duration.TotalSeconds #>,
                                    <# } #>
                                    ]
                                },
                                {
                                    type: 'line',
                                    label: "Rps",
                                    pointBackgroundColor: "<#= lineColor #>",
                                    backgroundColor: "<#= lineColor #>",
                                    borderColor: "<#= lineColor #>",
                                    fill: false,
                                    data: [
                                    <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                                        <#= item.Rps #>,
                                    <# } #>
                                    ]
                                },
                                ]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Average Duration & Rps (Unary)',
                                    padding: 3
                                },
                                legend: {
                                    labels: {
                                        boxWidth: 30,
                                        padding: 20
                                    },
                                    display: true
                                },
                                tooltips: {
                                    mode: 'label' // data colum for tooltip
                                },
                                responsive: true
                            }
                        });
                    </script>
                    <script>
                        var ctx = document.getElementById("unaryRequestStackBar");
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [
                                <# foreach(var item in unaryRequestResult.SummaryItems) { #>
                                    "<#= item.RequestCount #>",
                                <# } #>
                                ],
                                datasets: [
                                <# for(var i = 0; i < unaryRequestResult.ClientDurationItems.Length; i++) { #>
                                {
                                    <#
                                        var current = unaryRequestResult.ClientDurationItems[i];
                                        var items = current.Items;
                                        var color = GetColor(i);
                                    #>
                                    type: 'bar',
                                    label: "<#= current.Client #>",
                                    borderWidth: 1,
                                    backgroundColor: "<#= color #>",
                                    borderColor: "<#= color #>",
                                    data: [
                                    <# foreach(var summaries in items) { #>
                                        <# foreach(var item in summaries.SummaryItems) { #>
                                            <#= item.Duration.TotalSeconds #>,
                                        <# } #>
                                    <# } #>
                                    ]
                                },
                                <# } #>
                                ]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Stacked Duration per Client (Unary)',
                                    padding: 3
                                },
                                scales: {
                                    xAxes: [{
                                        stacked: true, // use stacked bar chart
                                        categoryPercentage: 0.4 // width of bar
                                    }],
                                    yAxes: [{
                                        stacked: true // use stacked bar chart
                                    }]
                                },
                                legend: {
                                    labels: {
                                        boxWidth: 30,
                                        padding: 20
                                    },
                                    display: false
                                },
                                tooltips: {
                                    mode: 'label' // data colum for tooltip
                                },
                                responsive: true
                            }
                        });
                    </script>
                </div>

                <div>
                    <h2>Hub Connection Bench</h2>
                    <canvas id="hubRequestAvg"></canvas>
                    <canvas id="hubRequestStackBar"></canvas>

                    <script>
                        var ctx = document.getElementById("hubRequestAvg");
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [
                                <# foreach(var item in hubRequestResult.SummaryItems) { #>
                                    "<#= item.RequestCount #>",
                                <# } #>
                                ],
                                datasets: [
                                {
                                    type: 'bar',
                                    label: "Duration",
                                    backgroundColor: "<#= barColor #>",
                                    borderColor: "<#= barColor #>",
                                    data: [
                                    <# foreach(var item in hubRequestResult.SummaryItems) { #>
                                        <#= item.Duration.TotalSeconds #>,
                                    <# } #>
                                    ]
                                },
                                {
                                    type: 'line',
                                    label: "Rps",
                                    pointBackgroundColor: "<#= lineColor #>",
                                    backgroundColor: "<#= lineColor #>",
                                    borderColor: "<#= lineColor #>",
                                    fill: false,
                                    data: [
                                    <# foreach(var item in hubRequestResult.SummaryItems) { #>
                                        <#= item.Rps #>,
                                    <# } #>
                                    ]
                                },
                                ]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Average Duration & Rps (Hub)',
                                    padding: 3
                                },
                                legend: {
                                    labels: {
                                        boxWidth: 30,
                                        padding: 20
                                    },
                                    display: true
                                },
                                tooltips: {
                                    mode: 'label' // data colum for tooltip
                                },
                                responsive: true
                            }
                        });
                    </script>
                    <script>
                        var ctx = document.getElementById("hubRequestStackBar");
                        var myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [
                                <# foreach(var item in hubRequestResult.SummaryItems) { #>
                                    "<#= item.RequestCount #>",
                                <# } #>
                                ],
                                datasets: [
                                <# for(var i = 0; i < hubRequestResult.ClientDurationItems.Length; i++) { #>
                                {
                                    <#
                                        var current = hubRequestResult.ClientDurationItems[i];
                                        var items = current.Items;
                                        var color = GetColor(i);
                                    #>
                                    type: 'bar',
                                    label: "<#= current.Client #>",
                                    borderWidth: 1,
                                    backgroundColor: "<#= color #>",
                                    borderColor: "<#= color #>",
                                    data: [
                                    <# foreach(var summaries in items) { #>
                                        <# foreach(var item in summaries.SummaryItems) { #>
                                            <#= item.Duration.TotalSeconds #>,
                                        <# } #>
                                    <# } #>
                                    ]
                                },
                                <# } #>
                                ]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Stacked Duration per Client (Hub)',
                                    padding: 3
                                },
                                scales: {
                                    xAxes: [{
                                        stacked: true, // use stacked bar chart
                                        categoryPercentage: 0.4 // width of bar
                                    }],
                                    yAxes: [{
                                        stacked: true // use stacked bar chart
                                    }]
                                },
                                legend: {
                                    labels: {
                                        boxWidth: 30,
                                        padding: 20
                                    },
                                    display: false
                                },
                                tooltips: {
                                    mode: 'label' // data colum for tooltip
                                },
                                responsive: true
                            }
                        });
                    </script>
                </div>

            </div>
        </div>
    </main>

    <footer class="text-muted" style="padding-top: 3rem;padding-bottom: 3rem;">
        <div class=container>
            <a href="#" class="btn btn-outline-info float-right" role="button">
                <i class="fa fa-angle-up"></i>
            </a>
            <p class="text-center">
                <a class="text-dark" href="https://github.com/cysharp/MagicOnion/">Visit the GitHub</a>
            /
            © 2020 Copyright:
                <a class="text-dark" href="https://cysharp.co.jp/">Cysharp, Inc.</a>
            </p>
        </div>
    </footer>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
        integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
        crossorigin="anonymous"></script>
    <!-- MDB -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.0.0/mdb.min.js"></script>
</body>

</html>